;; Analyzed by ClojureScript 1.7.48
{:use-macros {go cljs.core.async.macros}, :excludes #{comment}, :name shouts.core, :imports {XhrIo goog.net.XhrIo}, :requires {om om.core, om.core om.core, dom om.dom, om.dom om.dom, cljs.core.async cljs.core.async, http cljs-http.client, cljs-http.client cljs-http.client, XhrIo goog.net.XhrIo}, :uses {timeout cljs.core.async, <! cljs.core.async}, :defs {user {:name shouts.core/user, :file "src/shouts/core.cljs", :line 12, :column 1, :end-line 12, :end-column 10, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 12, :column 6, :end-line 12, :end-column 10}}, t8002 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/t8002, :file "src/shouts/core.cljs", :type true, :anonymous true, :column 3, :line 62, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t7987 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment-form state owner meta7988])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/->t7987, :variadic false, :file "src/shouts/core.cljs", :method-params ([comment-form state owner meta7988]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 34, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment-form state owner meta7988])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t7999 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/t7999, :file "src/shouts/core.cljs", :type true, :anonymous true, :column 3, :line 55, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t7987 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/t7987, :file "src/shouts/core.cljs", :type true, :anonymous true, :column 3, :line 34, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t7996 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comments state owner meta7997])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/->t7996, :variadic false, :file "src/shouts/core.cljs", :method-params ([comments state owner meta7997]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 55, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comments state owner meta7997])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, delete-comment {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 30, :column 7, :end-line 30, :end-column 21, :arglists (quote ([id]))}, :name shouts.core/delete-comment, :variadic false, :file "src/shouts/core.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, t7984 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/t7984, :file "src/shouts/core.cljs", :type true, :anonymous true, :column 3, :line 34, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t7993 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/t7993, :file "src/shouts/core.cljs", :type true, :anonymous true, :column 3, :line 45, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t7984 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment-form state owner meta7985])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/->t7984, :variadic false, :file "src/shouts/core.cljs", :method-params ([comment-form state owner meta7985]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 34, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment-form state owner meta7985])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, comments {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 54, :column 7, :end-line 54, :end-column 15, :arglists (quote ([state owner]))}, :name shouts.core/comments, :variadic false, :file "src/shouts/core.cljs", :end-column 15, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, ->t8005 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment-box state owner meta8006])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/->t8005, :variadic false, :file "src/shouts/core.cljs", :method-params ([comment-box state owner meta8006]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 62, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment-box state owner meta8006])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, base-url {:name shouts.core/base-url, :file "src/shouts/core.cljs", :line 13, :column 1, :end-line 13, :end-column 14, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 13, :column 6, :end-line 13, :end-column 14}}, t7990 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/t7990, :file "src/shouts/core.cljs", :type true, :anonymous true, :column 3, :line 45, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t7999 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comments state owner meta8000])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/->t7999, :variadic false, :file "src/shouts/core.cljs", :method-params ([comments state owner meta8000]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 55, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comments state owner meta8000])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, update-fn {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([data owner]))}, :name shouts.core/update-fn, :variadic false, :file "src/shouts/core.cljs", :end-column 16, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, app-state {:name shouts.core/app-state, :file "src/shouts/core.cljs", :line 11, :column 1, :end-line 11, :end-column 15, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 11, :column 6, :end-line 11, :end-column 15}}, t7996 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/t7996, :file "src/shouts/core.cljs", :type true, :anonymous true, :column 3, :line 55, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t8002 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment-box state owner meta8003])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/->t8002, :variadic false, :file "src/shouts/core.cljs", :method-params ([comment-box state owner meta8003]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 62, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment-box state owner meta8003])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t7993 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment state owner meta7994])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/->t7993, :variadic false, :file "src/shouts/core.cljs", :method-params ([comment state owner meta7994]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 45, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment state owner meta7994])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t7990 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment state owner meta7991])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/->t7990, :variadic false, :file "src/shouts/core.cljs", :method-params ([comment state owner meta7991]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 45, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment state owner meta7991])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, comment {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 44, :column 7, :end-line 44, :end-column 14, :arglists (quote ([state owner]))}, :name shouts.core/comment, :variadic false, :file "src/shouts/core.cljs", :end-column 14, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, comment-box {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 61, :column 7, :end-line 61, :end-column 18, :arglists (quote ([state owner]))}, :name shouts.core/comment-box, :variadic false, :file "src/shouts/core.cljs", :end-column 18, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, read-data {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([]))}, :name shouts.core/read-data, :variadic false, :file "src/shouts/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, t8005 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name shouts.core/t8005, :file "src/shouts/core.cljs", :type true, :anonymous true, :column 3, :line 62, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, comment-form {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/shouts/core.cljs", :line 33, :column 7, :end-line 33, :end-column 19, :arglists (quote ([state owner]))}, :name shouts.core/comment-form, :variadic false, :file "src/shouts/core.cljs", :end-column 19, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:shout meta8000 meta7988 :json-params owner :else meta7997 :name :_method meta7991 :recur comments meta8006 :id state meta8003 :target quote :arglists comment comment-box meta7994 :keywordize-keys :user comment-form meta7985 :message}, :order [:name :message :user :keywordize-keys :json-params :shout :_method comment-form :arglists quote state owner meta7985 meta7988 :id comment meta7991 meta7994 comments meta7997 meta8000 comment-box meta8003 meta8006 :target :recur :else]}, :doc nil}