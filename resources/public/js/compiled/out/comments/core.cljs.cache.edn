;; Analyzed by ClojureScript 1.7.48
{:use-macros {go cljs.core.async.macros}, :excludes #{comment}, :name comments.core, :imports {XhrIo goog.net.XhrIo}, :requires {om om.core, om.core om.core, dom om.dom, om.dom om.dom, cljs.core.async cljs.core.async, http cljs-http.client, cljs-http.client cljs-http.client, XhrIo goog.net.XhrIo}, :uses {timeout cljs.core.async, <! cljs.core.async}, :defs {t10724 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/t10724, :file "src/comments/core.cljs", :type true, :anonymous true, :column 3, :line 64, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t10727 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/t10727, :file "src/comments/core.cljs", :type true, :anonymous true, :column 3, :line 64, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, user {:name comments.core/user, :file "src/comments/core.cljs", :line 15, :column 1, :end-line 15, :end-column 10, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 15, :column 6, :end-line 15, :end-column 10}}, ->t10706 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment-form state owner meta10707])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/->t10706, :variadic false, :file "src/comments/core.cljs", :method-params ([comment-form state owner meta10707]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 36, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment-form state owner meta10707])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t10706 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/t10706, :file "src/comments/core.cljs", :type true, :anonymous true, :column 3, :line 36, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t10727 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment-box state owner meta10728])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/->t10727, :variadic false, :file "src/comments/core.cljs", :method-params ([comment-box state owner meta10728]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 64, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment-box state owner meta10728])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t10709 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment-form state owner meta10710])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/->t10709, :variadic false, :file "src/comments/core.cljs", :method-params ([comment-form state owner meta10710]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 36, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment-form state owner meta10710])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t10721 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/t10721, :file "src/comments/core.cljs", :type true, :anonymous true, :column 3, :line 57, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t10724 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment-box state owner meta10725])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/->t10724, :variadic false, :file "src/comments/core.cljs", :method-params ([comment-box state owner meta10725]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 64, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment-box state owner meta10725])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, delete-comment {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 32, :column 7, :end-line 32, :end-column 21, :arglists (quote ([id]))}, :name comments.core/delete-comment, :variadic false, :file "src/comments/core.cljs", :end-column 21, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, ->t10721 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comments state owner meta10722])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/->t10721, :variadic false, :file "src/comments/core.cljs", :method-params ([comments state owner meta10722]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 57, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comments state owner meta10722])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t10712 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/t10712, :file "src/comments/core.cljs", :type true, :anonymous true, :column 3, :line 47, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, post-id {:name comments.core/post-id, :file "src/comments/core.cljs", :line 10, :column 1, :end-line 10, :end-column 13, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 10, :column 6, :end-line 10, :end-column 13}}, comments {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 56, :column 7, :end-line 56, :end-column 15, :arglists (quote ([state owner]))}, :name comments.core/comments, :variadic false, :file "src/comments/core.cljs", :end-column 15, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, ->t10718 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comments state owner meta10719])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/->t10718, :variadic false, :file "src/comments/core.cljs", :method-params ([comments state owner meta10719]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 57, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comments state owner meta10719])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t10718 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/t10718, :file "src/comments/core.cljs", :type true, :anonymous true, :column 3, :line 57, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, json-url {:name comments.core/json-url, :file "src/comments/core.cljs", :line 12, :column 1, :end-line 12, :end-column 14, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 12, :column 6, :end-line 12, :end-column 14}}, base-url {:name comments.core/base-url, :file "src/comments/core.cljs", :line 11, :column 1, :end-line 11, :end-column 14, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 11, :column 6, :end-line 11, :end-column 14}}, t10715 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/t10715, :file "src/comments/core.cljs", :type true, :anonymous true, :column 3, :line 47, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t10709 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/t10709, :file "src/comments/core.cljs", :type true, :anonymous true, :column 3, :line 36, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, update-fn {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([data owner]))}, :name comments.core/update-fn, :variadic false, :file "src/comments/core.cljs", :end-column 16, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, app-state {:name comments.core/app-state, :file "src/comments/core.cljs", :line 14, :column 1, :end-line 14, :end-column 15, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 14, :column 6, :end-line 14, :end-column 15}}, ->t10715 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment state owner meta10716])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/->t10715, :variadic false, :file "src/comments/core.cljs", :method-params ([comment state owner meta10716]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 47, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment state owner meta10716])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t10712 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([comment state owner meta10713])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name comments.core/->t10712, :variadic false, :file "src/comments/core.cljs", :method-params ([comment state owner meta10713]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 47, :max-fixed-arity 4, :fn-var true, :arglists (quote ([comment state owner meta10713])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, comment {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 46, :column 7, :end-line 46, :end-column 14, :arglists (quote ([state owner]))}, :name comments.core/comment, :variadic false, :file "src/comments/core.cljs", :end-column 14, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, comment-box {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 63, :column 7, :end-line 63, :end-column 18, :arglists (quote ([state owner]))}, :name comments.core/comment-box, :variadic false, :file "src/comments/core.cljs", :end-column 18, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, read-data {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 17, :column 7, :end-line 17, :end-column 16, :arglists (quote ([]))}, :name comments.core/read-data, :variadic false, :file "src/comments/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, comment-form {:protocol-inline nil, :meta {:file "/home/ubuntu/bombers/src/comments/core.cljs", :line 35, :column 7, :end-line 35, :end-column 19, :arglists (quote ([state owner]))}, :name comments.core/comment-form, :variadic false, :file "src/comments/core.cljs", :end-column 19, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:json-params owner meta10719 meta10725 :else :name :comments meta10716 :_method meta10710 :recur comments meta10713 meta10722 meta10707 :id state :post meta10728 :target quote :arglists comment comment-box :keywordize-keys :user comment-form :message}, :order [:name :message :user :keywordize-keys :json-params :post :comments :_method comment-form :arglists quote state owner meta10707 meta10710 :id comment meta10713 meta10716 comments meta10719 meta10722 comment-box meta10725 meta10728 :target :recur :else]}, :doc nil}